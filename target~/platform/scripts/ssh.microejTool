<?xml version="1.0" encoding="UTF-8"?>
<!--
	ANT file
	Copyright 2018 IS2T. All rights reserved.
	IS2T PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<project name="SSHDeployment" default="deploy">
	
	<description>Deploy a MicroEJ application file with SCP and launch it using SSH.</description>
	
	<dirname file="${ant.file.SSHDeployment}" property="ant.dir.SSHDeployment"/>

	<target name="deploy" depends="deploy/ssh/launch"/>

	<target name="deploy/ssh/launch" depends="deploy/ssh/copy, deploy/ssh/config" if="${ssh.launchApplication}">
		<echo message="Launch ${application.filename} on ${ssh.hostname}"/>
		<deploy-sshexec	command="${application.remote.file} ${application.args}"/>
	</target>
	
	<target name="deploy/ssh/copy" depends="deploy/ssh/kill,deploy/ssh/mkdir,deploy/ssh/config,deploy/ssh/copy/scp"/>
	
	<target name="deploy/ssh/copy/scp" depends="deploy/ssh/copy/scp/ant,deploy/ssh/copy/scp/exec">
		<!-- Set the copied file executable -->
		<deploy-sshexec command="chmod a+x ${application.remote.file}"/>
	</target>
		
	<!--
		Execute an scp using the ant task (not compatible with IPv4)
	-->
	<target name="deploy/ssh/copy/scp/ant" unless="ssh.ipv6">
		<echo message="Copy file ${application.file} to ${ssh.hostname}:${ssh.remote.directory}"/>
		<scp file="${application.file}" todir="${ssh.user}:${ssh.password}@${ssh.hostname}:${ssh.remote.directory}" trust="true"/>
	</target>

	<!--
		Execute an scp using the scp system command (compatible with IPv6)
	-->
	<target name="deploy/ssh/copy/scp/exec" if="ssh.ipv6">
		<echo message="Copy file ${application.file} to [${ssh.hostname}]:${ssh.remote.directory}"/>
		
		<!-- Create a temporary script that prints the password -->
		<tempfile destdir="${microej.io.tmpdir}" prefix="ssh" property="ssh.askpass.script" deleteonexit="true"/>
		<echo message="echo ${ssh.password}" file="${ssh.askpass.script}"/>
		<chmod file="${ssh.askpass.script}" perm="a+rx"/>
		
		<!-- Exec the scp command and use the previously generated script to get the password -->
		<exec executable="scp">
			<env key="SSH_ASKPASS" file="${ssh.askpass.script}"/>
			<arg value="${application.file}"/>
			<arg value="${ssh.user}@[${ssh.hostname}]:${ssh.remote.directory}"/>			
		</exec>
	</target>
	
	<target name="deploy/ssh/mkdir" depends="deploy/ssh/config">
		<echo message="Create remote directory ${ssh.remote.directory}"/>
		<deploy-sshexec	command="mkdir -p ${ssh.remote.directory}"/>
	</target>
	
	<target name="deploy/ssh/kill" depends="deploy/ssh/config" if="${ssh.killBeforeDeploy}">
		<echo message="Kill potential running process on ${ssh.hostname}"/>
		<deploy-sshexec command="fuser -k ${application.remote.file}" failonerror="false"/>
	</target>

	<target name="deploy/ssh/config" depends="deploy/ssh/check-config,deploy/ssh/taskdef">
		<presetdef name="deploy-sshexec">
			<sshexec host="${ssh.hostname}"
					 username="${ssh.user}"
					 password="${ssh.password}"
				 	 usepty="true"
					 trust="true"/>
		</presetdef>
	</target>
	
	<target name="deploy/ssh/check-config">
		<fail unless="application.file"/>
		<fail unless="ssh.hostname"/>
		<fail unless="ssh.user"/>
		<property name="ssh.remote.directory" value="/tmp"/>
		<!-- No arguments by default -->
		<property name="application.args" value=""/>
		<!-- Kill the process before deploying by default -->
		<property name="ssh.killBeforeDeploy" value="true"/>
		<!-- Launch the application by default -->
		<property name="ssh.launchApplication" value="true"/>
		
		<basename property="application.filename" file="${application.file}"/>
		<property name="application.remote.file" value="${ssh.remote.directory}/${application.filename}"/>
		
		<!-- Set the ssh.ipv6 property if we are using an IPv6 address -->
		<condition property="ssh.ipv6">
			<contains string="${ssh.hostname}" substring=":"/>
		</condition>
		
		<!-- Set the property ssh.tasks.available if the sshexec and scp tasks are available. -->
		<condition property="ssh.tasks.available" value="SET">
			<and>
				<typefound name="sshexec"/>
				<typefound name="scp"/>
			</and>
		</condition>
	</target>

	<target name="deploy/ssh/taskdef" depends="deploy/ssh/check-config" unless="ssh.tasks.available">
		<path id="ant.ssh.path">
			<fileset dir="${ant.dir.SSHDeployment}/../tools/ant/lib">
				<include name="*jsch*.jar"/>
			</fileset>
		</path>
		<taskdef name="sshexec" classname="org.apache.tools.ant.taskdefs.optional.ssh.SSHExec" classpathref="ant.ssh.path"/>
		<taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" classpathref="ant.ssh.path"/>
	</target>
	
</project>
